{"ast":null,"code":"class ApiClient {\n  static challenge() {\n    return fetch(ApiClient.SERVER_URL + ApiClient.GET_CHALLENGE);\n  }\n  static sendGuess(user, a, b, guess) {\n    return fetch(ApiClient.SERVER_URL + ApiClient.POST_RESULT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userAlias: user,\n        factorA: a,\n        factorB: b,\n        guess: guess\n      })\n    });\n  }\n  static getAttempts(userAlias) {\n    console.log('Get attempts for ' + userAlias);\n    return fetch(ApiClient.SERVER_URL + ApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n  }\n}\nApiClient.SERVER_URL = 'http://localhost:8080';\nApiClient.GET_CHALLENGE = '/challenges/random';\nApiClient.POST_RESULT = '/attempts';\nApiClient.GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\nexport default ApiClient;","map":{"version":3,"names":["ApiClient","challenge","fetch","SERVER_URL","GET_CHALLENGE","sendGuess","user","a","b","guess","POST_RESULT","method","headers","body","JSON","stringify","userAlias","factorA","factorB","getAttempts","console","log","GET_ATTEMPTS_BY_ALIAS"],"sources":["/Users/hariharan.thavachelvam/Documents/Sandbox/workspace/My Learning/microservices-v2/challenges-frontend/src/components/LastAttemptsComponent.js"],"sourcesContent":["class ApiClient {\n\n    static SERVER_URL = 'http://localhost:8080';\n    static GET_CHALLENGE = '/challenges/random';\n    static POST_RESULT = '/attempts';\n    static GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\n\n    static challenge(): Promise<Response> {\n        return fetch(ApiClient.SERVER_URL + ApiClient.GET_CHALLENGE);\n    }\n\n    static sendGuess(user: string,\n                     a: number,\n                     b: number,\n                     guess: number): Promise<Response> {\n        return fetch(ApiClient.SERVER_URL + ApiClient.POST_RESULT,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        userAlias: user,\n                        factorA: a,\n                        factorB: b,\n                        guess: guess\n                    }\n                )\n            });\n    }\n\n    static getAttempts(userAlias: string): Promise<Response> {\n        console.log('Get attempts for '+userAlias);\n        return fetch(ApiClient.SERVER_URL +\n            ApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n    }\n}\n\nexport default ApiClient;"],"mappings":"AAAA,MAAMA,SAAS,CAAC;EAOZ,OAAOC,SAASA,CAAA,EAAsB;IAClC,OAAOC,KAAK,CAACF,SAAS,CAACG,UAAU,GAAGH,SAAS,CAACI,aAAa,CAAC;EAChE;EAEA,OAAOC,SAASA,CAACC,IAAY,EACZC,CAAS,EACTC,CAAS,EACTC,KAAa,EAAqB;IAC/C,OAAOP,KAAK,CAACF,SAAS,CAACG,UAAU,GAAGH,SAAS,CAACU,WAAW,EACrD;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAChB;QACIC,SAAS,EAAEV,IAAI;QACfW,OAAO,EAAEV,CAAC;QACVW,OAAO,EAAEV,CAAC;QACVC,KAAK,EAAEA;MACX,CACJ;IACJ,CAAC,CAAC;EACV;EAEA,OAAOU,WAAWA,CAACH,SAAiB,EAAqB;IACrDI,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACL,SAAS,CAAC;IAC1C,OAAOd,KAAK,CAACF,SAAS,CAACG,UAAU,GAC7BH,SAAS,CAACsB,qBAAqB,GAAGN,SAAS,CAAC;EACpD;AACJ;AArCMhB,SAAS,CAEJG,UAAU,GAAG,uBAAuB;AAFzCH,SAAS,CAGJI,aAAa,GAAG,oBAAoB;AAHzCJ,SAAS,CAIJU,WAAW,GAAG,WAAW;AAJ9BV,SAAS,CAKJsB,qBAAqB,GAAG,kBAAkB;AAkCrD,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}